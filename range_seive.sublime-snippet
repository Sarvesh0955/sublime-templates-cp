<snippet>
	<content><![CDATA[
vl prime;
void range_primes(ll L,ll R) {
    ll limit = sqrtl(R);
    limit+=10;
    vector<bool> isPrime(limit,1);
    vl primes;
    isPrime[0]=isPrime[1]=0;
   	for(ll i=2;i<limit;i++)
       	if(isPrime[i]==true)                
            for(ll j=2*i;j<limit;j+=i)
               	isPrime[j]=false;

    for(ll i=2;i<limit;i++)
      	if(isPrime[i])
           	primes.pb(i);

    vector<bool> is_prime(R-L+1,1);

    for(auto val : primes){
        ll st = max(val*val,(L+val-1)/val*val);
        for(ll j=st;j<=R;j+=val) {
            is_prime[j-L] = 0;
        }
    }
    for(ll i=0;i<is_prime.size();i++){
        if (is_prime[i] && (i+L)>=2){
            prime.push_back(i+L);
        }
    }
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>range_seive</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>